package com.example.kata.dto.request;

import com.example.kata.enums.CategoryType;
import com.example.kata.enums.PersonType;
import com.example.kata.enums.TransactionType;
import com.example.kata.enums.TransactionStatus;
import lombok.Data;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.DecimalMin;
import java.math.BigDecimal;

@Data
public class TransactionRequest {
        @NotNull(message = "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        private Long userId;

        @NotNull(message = "–¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        private TransactionType transactionType;

        private String comment;

        @NotNull(message = "–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π")
        @DecimalMin(value = "0.01", message = "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
        private BigDecimal amount;

        @NotNull(message = "–°—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        private TransactionStatus status;

        private String senderBank;
        private String senderAccount;
        private String recipientBank;

        @Pattern(regexp = "^\\d{10,12}$", message = "–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 10 –¥–æ 12 —Ü–∏—Ñ—Ä")
        private String recipientInn;

        private String recipientAccount;
        private CategoryType category;

        @Pattern(regexp = "^(\\+7|8)\\d{10}$", message = "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX")
        private String recipientPhone;

        // üëá –í–æ—Ç —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ!
        @NotNull(message = "–¢–∏–ø –ª–∏—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        private PersonType personType;


}
